#
# Quarkus
#
quarkus.banner.enabled = true
quarkus.log.level=INFO

# See https://quarkus.io/guides/management-interface-reference
quarkus.management.enabled = true
quarkus.management.port=9000


######################
# Health and metrics
######################
# Metrics are exposed on PATH /q/metrics  and port 9000

# Set whether to enable the MicrometerRoutePolicyFactory for capturing metrics on route processing times
quarkus.camel.metrics.enable-route-policy=true

# Set whether to enable the MicrometerMessageHistoryFactory for capturing metrics on individual route
# node processing times. Depending on the number of configured route nodes, there is the potential to create
# a large volume of metrics. Therefore, this option is disabled by default.
quarkus.camel.metrics.enable-message-history=true

# Set whether to enable the MicrometerExchangeEventNotifier for capturing metrics on exchange processing times.
quarkus.camel.metrics.enable-exchange-event-notifier=true

# Set whether to enable the MicrometerRouteEventNotifier for capturing metrics on the total number of routes
# and total number of routes running.
quarkus.camel.metrics.enable-route-event-notifier=true

# Set whether to gather performance information about Camel Thread Pools by injecting an InstrumentedThreadPoolFactory.
quarkus.camel.metrics.enable-instrumented-thread-pool-factory=false

######################
# KAFKA configuration
######################
# Example here: https://github.com/apache/camel-quarkus-examples/blob/main/kafka/src/main/resources/application.properties
kafka.dbz.topic.name=${KAFKA_DBZ_TOPIC_NAME}
%dev.kafka.dbz.topic.name=mariadb.msusers.USERS_FRANCE
kafka.application.groupid=camel-quarkus-dbz
%dev.kafka.application.groupid=dev-camel-quarkus-dbz


# Apicurio Dev Service will be enabled when the quarkus-apicurio-registry-avro extension is present in your application
# and itâ€™s address has not been explicitly configured
# See: https://quarkus.io/guides/dev-services#apicurio-registry
quarkus.apicurio-registry.devservices.enabled=false
apicurio.registry=${APICURIO_REGISTRY_URL}
%dev.apicurio.registry=http://demo-apicurioregistry.amqstreams.router-default.apps-crc.testing/apis/registry/v2

# Warning: we use anonymous authentication and plain communications. DO NOT USE THIS IN PRODUCTION
camel.component.kafka.brokers=${KAFKA_BOOTSTRAP_SERVERS}

# DEV/Localhost configuration to connect to a remote secured Kafka cluster
%dev.quarkus.kafka.devservices.enabled=false
%dev.camel.component.kafka.brokers=single-node-cluster-kafka-bootstrap-amqstreams.apps-crc.testing:443
%dev.camel.component.kafka.security-protocol=SASL_SSL
%dev.camel.component.kafka.sasl-mechanism=SCRAM-SHA-512
%dev.camel.component.kafka.sasl-jaas-config=org.apache.kafka.common.security.scram.ScramLoginModule required username=superuser password=mJspwTTjvrvL1WLJJCwC6yeKu4dcOBd3;
%dev.camel.component.kafka.ssl-truststore-location=/tmp/ca.p12
%dev.camel.component.kafka.ssl-truststore-type=PKCS12
%dev.camel.component.kafka.ssl-truststore-password=CHANGEME
#%dev.camel.component.kafka.additional-properties=SET-ADDITIONAL-PROPERTIES

######################
# MAPPING
######################
%dev.jslt.mapper=file:jslt-mappers/france-to-central-mapping.jslt?contentCache=true
jslt.mapper=${JSLT_MAPPER}

#########################
# MONGODB configuration
#########################
# See: https://quarkus.io/guides/mongodb#quarkus-mongodb_configuration
# The Camel Quarkus MongoDB extension automatically registers a MongoDB client 'bean' named 'camelMongoClient'
# It can be referenced in the mongodb endpoint URI connectionBean path paramete
quarkus.mongodb.connection-string=${MONGODB_CONNECTION_STRING}
quarkus.mongodb.database=${MONGODB_LOGIN_DATABASE}
quarkus.mongodb.application-name=camel-quarkus-dbz
mongodb.database=${MONGODB_DATABASE}
mongodb.users.collection=${MONGODB_COLLECTION}

#MongoDB - DEV/localhost configuration
%dev.quarkus.mongodb.connection-string=mongodb://root:mypassword@localhost:27017
%dev.quarkus.mongodb.database=admin
%dev.quarkus.mongodb.application-name=dev-camel-quarkus-dbz
%dev.mongodb.database=admin
%dev.mongodb.users.collection=myDevCollection

############################################
#### OpenShift deployment extension
############################################
quarkus.openshift.route.expose=false
quarkus.openshift.deployment-kind=Deployment

# Secret name with ENV VARS parameter values
quarkus.openshift.env.secrets=camel-quarkus-dbz-configuration
